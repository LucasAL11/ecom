# Generated by Django 3.2 on 2022-06-13 20:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import localflavor.br.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email addres')),
                ('user_name', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone_type', models.CharField(choices=[('P', 'pessoal'), ('R', 'Residencial'), ('C', 'Comercial')], max_length=1)),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Phone number')),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.CreateModel(
            name='Distribuitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email addres')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address_type', models.CharField(choices=[('R', 'Residencial'), ('P', 'Pessoal'), ('C', 'Comercial'), ('O', 'Outros')], max_length=100)),
                ('name', models.CharField(max_length=250, verbose_name='Nome Completo')),
                ('email', models.EmailField(max_length=254)),
                ('postal_code', localflavor.br.models.BRPostalCodeField(max_length=9, verbose_name='CEP')),
                ('state', localflavor.br.models.BRStateField(max_length=2, verbose_name='Estado')),
                ('district', models.CharField(max_length=250, verbose_name='Bairro')),
                ('street', models.CharField(max_length=250, verbose_name='Rua')),
                ('number', models.CharField(max_length=250, verbose_name='NÃºmero')),
                ('complement', models.CharField(blank=True, max_length=250, verbose_name='Complemento')),
                ('city', models.CharField(max_length=250, verbose_name='Cidade')),
                ('custumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='first_name last_name')),
            ],
            options={
                'ordering': ['custumer'],
            },
        ),
    ]
